{"version":3,"sources":["img/Tianlu Feng resume 19W.pdf","img/changsha/image1.JPG","template/SideDrawer/ToggleButton.js","template/Menu.js","template/SideDrawer/SideDrawer.js","components/Backdrop.js","route/Home.js","route/Contact.js","route/Photo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","toggleButtion","props","react_default","a","createElement","className","onClick","click","Menu","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","window","addEventListener","resizeHeaderOnScroll","distanceY","pageYOffset","document","documentElement","scrollTop","headerEl","getElementById","logo","classList","remove","add","id","href","resume","SideDrawer_ToggleButton","drawerClickHandler","Component","sideDrawer","drawerClasses","show","backdrop","Home","title","Contact","Photo","build","interval","subtitle","src","require","App","state","sideDrawerOpen","drawerToggleClickerHandler","_this","setState","prevState","backdropClickHandler","components_Backdrop","style","height","src_template_Menu","SideDrawer_SideDrawer","HashRouter","Switch","Route","exact","path","component","react_scroll_up_button","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8PCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sMCezBC,SAXO,SAAAC,GAClB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBC,QAASL,EAAMM,OACjDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCC4DRG,cAhEX,SAAAA,EAAYP,GAAO,OAAAQ,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,KACTV,qFAGNc,OAAOC,iBAAiB,SAAUL,KAAKM,qEAGvC,IAAMC,EAAYH,OAAOI,aAAeC,SAASC,gBAAgBC,UAE/DC,EAAWH,SAASI,eAAe,MACnCC,EAAOL,SAASI,eAAe,QAE7BN,EAJS,KAKXK,EAASG,UAAUC,OAAO,WAC1BJ,EAASG,UAAUE,IAAI,WACvBH,EAAKC,UAAUC,OAAO,YACtBF,EAAKC,UAAUE,IAAI,gBAEnBL,EAASG,UAAUC,OAAO,WAC1BJ,EAASG,UAAUE,IAAI,WACvBH,EAAKC,UAAUC,OAAO,cACtBF,EAAKC,UAAUE,IAAI,8CAInB,OACE1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUwB,GAAG,MAC3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,IAAID,GAAG,QAAf,gBAC9B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,MAAR,SACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,WAAR,UACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,6CAAR,aACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAMC,KAAT,WACJ7B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,aAAR,aAER5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAC4B,EAAD,CAAczB,MAAOI,KAAKV,MAAMgC,+BAvCrCC,aCkBJC,SAlBI,SAAAlC,GACf,IAAImC,EAAgB,cAIpB,OAHGnC,EAAMoC,OACLD,EAAgB,oBAGpBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAW+B,GACZlC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,MAAR,SACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,WAAR,UACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,6CAAR,aACJ5B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAMC,KAAT,WACJ7B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,aAAR,gBCRDQ,SAJE,SAAArC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,QAASL,EAAMM,kBCsB9BgC,qMAtBXnB,SAASoB,MAAQ,8CAGjB,OACEtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA2BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,wBAE5CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,yDAbK6B,cCYJO,8LAXPrB,SAASoB,MAAQ,iDAGrB,OACEtC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAPY8B,oBCmDPQ,qMA9CTtB,SAASoB,MAAQ,+CAIf,OACItC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,2DACAF,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACIzC,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,mBAAoBK,SAAU,SAC9D3C,EAAAC,EAAAC,cAAA,KAAG0B,KAAK,MAAK5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcyC,IAAKC,EAAQ,QAE3D7C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,iBAAkBK,SAAU,UAGhE3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,SAAUK,SAAU,WAGxD3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,YAAaJ,MAAO,aAAcK,SAAU,QAG7D3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,UAAWK,SAAU,UAGzD3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,SAAUK,SAAU,UAGxD3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,WAAYJ,MAAO,sBAAuBK,SAAU,UAGrE3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,YAAaJ,MAAO,qBAAsBK,SAAU,UAGrE3C,EAAAC,EAAAC,cAACuC,EAAA,MAAD,CAAOC,SAAU,YAAaJ,MAAO,UAAWK,SAAU,oBAvC9DX,8CCqDLc,6MA1CbC,MAAQ,CACNC,gBAAgB,KAGlBC,2BAA6B,WAC3BC,EAAKC,SAAS,SAACC,GACb,MAAO,CAACJ,gBAAiBI,EAAUJ,qBAIvCK,qBAAuB,WACrBH,EAAKC,SAAS,CAACH,gBAAgB,6EAI/B,IAAIZ,EAKJ,OAJG3B,KAAKsC,MAAMC,iBACZZ,EAAWpC,EAAAC,EAAAC,cAACoD,EAAD,CAAUjD,MAAOI,KAAK4C,wBAI7BrD,EAAAC,EAAAC,cAAA,OAAKqD,MAAO,CAACC,OAAQ,SACrBxD,EAAAC,EAAAC,cAACuD,EAAD,CAAM1B,mBAAoBtB,KAAKwC,6BAC/BjD,EAAAC,EAAAC,cAACwD,EAAD,CAAYvB,KAAM1B,KAAKsC,MAAMC,iBAC5BZ,EACDpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3B,IACjCrC,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWzB,IACxCvC,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWxB,OAI5CxC,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC+D,EAAA,WAAD,eApCUjC,mBCFEkC,QACW,cAA7BrD,OAAOsD,SAASC,UAEe,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAAStD,SAASI,eAAe,SD0H3C,kBAAmBmD,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4de5fd5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tianlu Feng resume 19W.4e73aa72.pdf\";","module.exports = __webpack_public_path__ + \"static/media/image1.f3033ed2.JPG\";","import React from 'react';\n\nimport './ToggleButton.css';\n\nconst toggleButtion = props =>{\n    return(\n        <button className=\"toggle-button\" onClick={props.click}> \n        <div className=\"bar1\"></div>\n        <div className=\"bar2\"></div>\n        <div className=\"bar3\"></div>\n    </button>\n    );\n\n};\n\nexport default toggleButtion;","import React, { Component } from 'react';\nimport ToggleButton from './SideDrawer/ToggleButton';\nimport './Menu.css';\nimport resume from './../img/Tianlu Feng resume 19W.pdf';\nclass Menu extends Component{\n    constructor(props){\n        super(props);\n    }\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.resizeHeaderOnScroll);\n      }\n      resizeHeaderOnScroll() {\n        const distanceY = window.pageYOffset || document.documentElement.scrollTop,\n          shrinkOn = 200,\n          headerEl = document.getElementById(\"tb\"),\n          logo = document.getElementById(\"logo\");\n    \n        if (distanceY > shrinkOn) {\n          headerEl.classList.remove(\"toolbar\");\n          headerEl.classList.add(\"smaller\");\n          logo.classList.remove(\"logo-big\");\n          logo.classList.add(\"logo-small\");\n        } else {\n          headerEl.classList.remove(\"smaller\");\n          headerEl.classList.add(\"toolbar\");\n          logo.classList.remove(\"logo-small\");\n          logo.classList.add(\"logo-big\");\n        }\n      }\n      render(){\n          return (\n            <header className='toolbar' id='tb'>\n                <nav className=\"toolbar-nav\">\n                    <div className=\"toolbar-logo\"><a href=\"/\" id='logo'>Tianlu Feng</a></div>\n                    <div className=\"spacer\"></div>\n                    <ul className=\"toolbar-nav-items\"> \n                        <li><a href='#/'>Home</a></li>\n                        <li><a href='#/photo'>Photo</a></li>\n                        <li><a href='https://github.com/ftlll?tab=repositories'>Projects</a></li>\n                        <li><a href={resume}>Resume</a></li>\n                        <li><a href='#/contact'>Contact</a></li>\n                    </ul>\n                    <div className='toggleButton'>\n                        <ToggleButton click={this.props.drawerClickHandler}/>\n                    </div>\n                </nav>\n            </header>\n          );\n      }\n}\n// const toolbar = props =>(\n//     <header className='toolbar'>\n//         <nav className=\"toolbar-nav\">\n//             <div className=\"toolbar-logo\"><a href=\"/\">The Logo</a></div>\n//             <div className=\"spacer\"></div>\n//             <ul className=\"toolbar-nav-items\"> \n//                 <li><a href='/'>Home</a></li>\n//                 <li><a href='/products/neue_rove'>Product Information</a></li>\n//                 <li><a href='/down_load'>Document Download</a></li>\n//                 <li><a href='/request'>Request</a></li>\n//                 <li><a href='/about'>About Us</a></li>\n//             </ul>\n//             <div className='toggleButton'>\n//                 <ToggleButton click={props.drawerClickHandler}/>\n//             </div>\n//         </nav>\n//     </header>\n// );\n\nexport default Menu;","import React from 'react';\nimport resume from './../../img/Tianlu Feng resume 19W.pdf';\nimport './SideDrawer.css';\n\nconst sideDrawer = props => {\n    let drawerClasses = 'side-drawer';\n    if(props.show){\n        drawerClasses = 'side-drawer open';\n    }\n    return (\n    <nav className={drawerClasses}>\n        <ul>\n            <li><a href='#/'>Home</a></li>\n            <li><a href='#/photo'>Photo</a></li>\n            <li><a href='https://github.com/ftlll?tab=repositories'>Projects</a></li>\n            <li><a href={resume}>Resume</a></li>\n            <li><a href='#/contact'>Contact</a></li>\n        </ul>\n    </nav>\n    );\n};\n\nexport default sideDrawer;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>(\n    <div className=\"backdrop\" onClick={props.click}/>\n);\n\nexport default backdrop;","import React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  componentDidMount(){\n    document.title = 'Home | FTL';\n  }\n  render() {\n    return (\n      <div>\n        <div className='hero'>\n          <div className='container hero-container'><p className='grey-36p'>Peter(Tianlu) Feng</p></div>\n        </div>\n        <div className='self-intro'>\n          <div className='container'>\n            <div className='row'>\n              <p className='black-20p content'>\n                Hi, there. Welcome to my personal website.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    componentDidMount(){\n        document.title = 'Contact | FTL';\n      }\n  render() {\n    return (\n      <div>\n          <div>888</div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { Timeline, Event } from \"react-timeline-scribble\";\nimport './Photo.css';\n\nclass Photo extends Component {\n\n    componentDidMount(){\n      document.title = 'Photo | FTL';\n    }\n\n    render(){\n        return(\n            <div>\n                <div className='hero-photo'>\n\n                </div>\n                <div className='container'>\n                    <h1>Trp Timeline (Click image to View all images)</h1>\n                    <Timeline>\n                        <Event interval={\"DEC 2018\"} title={\"Trip to Changsha\"} subtitle={'China'}>\n                            <a href='#/'><img className='display-img' src={require('./../img/changsha/image1.JPG')}/></a>\n                        </Event>\n                        <Event interval={\"AUG 2017\"} title={\"Trip to Guilin\"} subtitle={\"China\"}>\n\n                        </Event>\n                        <Event interval={\"AUG 2016\"} title={\"Ottawa\"} subtitle={\"Canada\"}>\n\n                        </Event>\n                        <Event interval={\"JULY 2016\"} title={\"East Coast\"} subtitle={\"USA\"}>\n\n                        </Event>\n                        <Event interval={\"MAR 2016\"} title={\"Nanjing\"} subtitle={\"China\"}>\n\n                        </Event>\n                        <Event interval={\"FEB 2016\"} title={\"Suzhou\"} subtitle={\"China\"}>\n\n                        </Event>\n                        <Event interval={\"Feb 2015\"} title={\"Thousand Islet Lake\"} subtitle={\"China\"}>\n\n                        </Event>\n                        <Event interval={\"JULY 2014\"} title={\"Osaka and Hokkaido\"} subtitle={\"Japan\"}>\n\n                        </Event>\n                        <Event interval={\"JULY 2014\"} title={\"Beijing\"} subtitle={\"China\"}>\n\n                        </Event>\n                    </Timeline>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Photo;\n","import React, { Component } from 'react';\nimport Menu from './template/Menu';\nimport SideDrawer from './template/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop';\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\nimport Home from './route/Home';\nimport Contact from './route/Contact';\nimport Photo from './route/Photo';\nimport './App.css';\nimport{\n  HashRouter,\n  Route, Switch\n} from 'react-router-dom';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickerHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () =>{\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render() {\n    let backdrop;\n    if(this.state.sideDrawerOpen){\n      backdrop = <Backdrop click={this.backdropClickHandler}/>;\n    }\n\n    return (\n          <div style={{height: '100%'}}>\n          <Menu drawerClickHandler={this.drawerToggleClickerHandler}/>\n          <SideDrawer show={this.state.sideDrawerOpen}/>\n          {backdrop}\n          <div>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/contact' component={Contact} />\n                <Route exact path='/photo' component={Photo} />\n              </Switch>\n            </HashRouter>\n          </div>\n          <div>\n        <ScrollUpButton />\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}